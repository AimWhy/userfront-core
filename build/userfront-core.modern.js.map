{"version":3,"file":"userfront-core.modern.js","sources":["../src/constants.js","../src/utils.js","../src/store.js","../src/tokens.js","../src/cookies.js","../src/url.js","../src/signon.js","../src/logout.js","../src/mode.js","../src/iframe.js","../src/index.js"],"sourcesContent":["export const apiUrl = `https://api.userfront.com/v0/`;\n\nexport const privateIPRegex = /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g;\n","/**\n * This file is for zero-dependency utilities that can\n * be imported by any other file. Don't add any imports\n * to this file other than constants\n */\n\nimport { privateIPRegex } from \"./constants.js\";\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nexport function isTestHostname(hn) {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n}\n","import { isTestHostname } from \"./utils.js\";\n\nexport const store = {\n  mode: isTestHostname() ? \"test\" : \"live\",\n};\n","import Cookies from \"js-cookie\";\n\nimport { store } from \"./store.js\";\n\n/**\n * Set and then return the access token\n */\nexport function accessToken() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  return store.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nexport function idToken() {\n  store.idToken = Cookies.get(store.idTokenName);\n  return store.idToken;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nexport function setTokensFromCookies() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  store.idToken = Cookies.get(store.idTokenName);\n  store.refreshToken = Cookies.get(store.refreshTokenName);\n}\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nexport function setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nexport function removeAllCookies() {\n  removeCookie(store.accessTokenName);\n  removeCookie(store.idTokenName);\n  removeCookie(store.refreshTokenName);\n  store.accessToken = undefined;\n  store.idToken = undefined;\n  store.refreshToken = undefined;\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nexport function setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  setTokensFromCookies();\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nexport function getQueryAttr(attrName) {\n  if (\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nexport async function redirectIfLoggedIn() {\n  if (!store.accessToken) {\n    return removeAllCookies();\n  }\n  if (getQueryAttr(\"redirect\")) {\n    return redirectToPath(getQueryAttr(\"redirect\"));\n  }\n\n  try {\n    const { data } = await axios.get(`${apiUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nexport function redirectToPath(pathOrUrl) {\n  try {\n    document;\n  } catch (error) {\n    return;\n  }\n  if (!pathOrUrl) return;\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.assign(path);\n  }\n}\n","import { store } from \"./store.js\";\nimport { getQueryAttr } from \"./url.js\";\n\n/**\n * This file has methods for signing up and logging in\n */\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nexport async function signup({ method, username, name, email, password }) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO(method);\n    case \"password\":\n      return signupWithPassword({ username, name, email, password });\n    default:\n      throw new Error('Userfront.signup called with invalid \"method\" property');\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function signupWithPassword({ username, name, email, password }) {\n  const { data } = await axios.post(`${apiUrl}auth/create`, {\n    tenantId: store.tenantId,\n    username,\n    name,\n    email,\n    password,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nexport async function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO(method);\n    case \"password\":\n      return loginWithPassword({ email, username, emailOrUsername, password });\n    case \"link\":\n      return loginWithLink(token, uuid);\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property');\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction loginWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\nfunction getProviderLink(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n\n  let url = `https://api.userfront.com/v0/auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}`;\n\n  const redirect = getQueryAttr(\"redirect\");\n  if (redirect) {\n    url += `&redirect=${encodeURIComponent(redirect)}`;\n  }\n\n  return url;\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n}) {\n  const { data } = await axios.post(`${apiUrl}auth/basic`, {\n    tenantId: store.tenantId,\n    emailOrUsername: email || username || emailOrUsername,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n */\nasync function loginWithLink(token, uuid) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) return;\n\n  const { data } = await axios.put(`${apiUrl}auth/link`, {\n    token,\n    uuid,\n    tenantId: store.tenantId,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Problem logging in.\");\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nexport async function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nexport async function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\nexport async function resetPassword({ uuid, token, password }) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n  const { data } = await axios.put(`${apiUrl}auth/reset`, {\n    tenantId: store.tenantId,\n    uuid,\n    token,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\n      \"There was a problem resetting your password. Please try again.\"\n    );\n  }\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\nimport { redirectToPath } from \"./url\";\n\n/**\n * Log a user out and redirect to the logout path.\n */\nexport async function logout() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    redirectToPath(data.redirectTo);\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants.js\";\nimport { store } from \"./store.js\";\n\n/**\n * Define the mode of operation (live or test)\n */\nexport async function setMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${store.tenantId}/mode`);\n    store.mode = data.mode || \"test\";\n  } catch (err) {\n    store.mode = \"test\";\n  }\n}\n","import { setCookiesAndTokens } from \"./cookies.js\";\n\nconst frameUrl = \"https://auth.userfront.net\";\nconst frameId = \"uf-auth-frame\";\n\nlet iframe;\n\n/**\n * Add the auth iframe to the document body, if the iframe\n * has not been added already.\n */\nexport function setIframe() {\n  try {\n    if (iframe) return;\n    iframe = document.createElement(\"iframe\");\n    iframe.src = frameUrl;\n    iframe.id = frameId;\n    iframe.style.width = \"0px\";\n    iframe.style.height = \"0px\";\n    iframe.style.display = \"none\";\n    document.body.appendChild(iframe);\n    addIframeMessageListener();\n  } catch (error) {}\n}\n\n/**\n * Return the iframe element\n */\nexport function getIframe() {\n  return iframe;\n}\n\n/**\n * Separated this call out from addIframeMessageListener\n * in order to make it testable.\n *\n * @param {*} e - iframe event\n */\nexport function triageEvent(e) {\n  if (!e || e.origin !== frameUrl || !e.data || !e.data.type) return;\n  switch (e.data.type) {\n    case \"exchange\":\n      console.log(\"exchange\");\n      break;\n    case \"refresh\":\n      setCookiesAndTokens(e.data.body.tokens);\n      break;\n    case \"logout\":\n      console.log(\"logout\");\n      break;\n    default:\n      return;\n  }\n}\n\n/**\n * Add an event listener to the window that will accept messages\n * from the iframe.\n */\nfunction addIframeMessageListener() {\n  try {\n    window.addEventListener(\"message\", triageEvent);\n  } catch (error) {}\n}\n","import { store } from \"./store.js\";\nimport { accessToken, idToken, setTokensFromCookies } from \"./tokens\";\nimport { redirectIfLoggedIn } from \"./url.js\";\nimport {\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n} from \"./signon.js\";\nimport { logout } from \"./logout.js\";\nimport { setMode } from \"./mode.js\";\nimport { setIframe } from \"./iframe.js\";\nimport { isTestHostname } from \"./utils.js\";\n\nlet initCallbacks = [];\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nexport function init(tenantId) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n  store.tenantId = tenantId;\n  store.accessTokenName = `access.${tenantId}`;\n  store.idTokenName = `id.${tenantId}`;\n  store.refreshTokenName = `refresh.${tenantId}`;\n  setIframe();\n  setTokensFromCookies();\n  try {\n    if (initCallbacks.length > 0) {\n      initCallbacks.forEach((cb) => {\n        if (!cb || typeof cb !== \"function\") return;\n        cb({ tenantId });\n      });\n    }\n    initCallbacks = [];\n  } catch (error) {}\n}\n\n/**\n * Add a callback function to be called upon Userfront.init()\n * @param {Function} cb\n */\nexport function addInitCallback(cb) {\n  if (!cb || typeof cb !== \"function\") return;\n  initCallbacks.push(cb);\n}\n\n/**\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nexport function registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\n/**\n * EXPORTS\n */\n\nexport { logout } from \"./logout.js\";\nexport { setMode } from \"./mode\";\nexport {\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n} from \"./signon.js\";\nexport { store } from \"./store\";\nexport { accessToken, idToken } from \"./tokens\";\nexport { redirectIfLoggedIn } from \"./url.js\";\nexport { isTestHostname } from \"./utils.js\";\n\nexport default {\n  // index\n  addInitCallback,\n  init,\n  registerUrlChangedEventListener,\n\n  //logout\n  logout,\n\n  // mode\n  isTestHostname,\n  setMode,\n\n  // signon\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n\n  // store\n  store,\n\n  // tokens\n  accessToken,\n  idToken,\n\n  // url\n  redirectIfLoggedIn,\n\n  exports: \"named\",\n};\n"],"names":["apiUrl","privateIPRegex","isTestHostname","hn","hostname","window","location","match","err","store","mode","accessToken","Cookies","get","accessTokenName","idToken","idTokenName","setTokensFromCookies","refreshToken","refreshTokenName","setCookie","value","options","type","cookieName","tenantId","secure","sameSite","set","removeCookie","name","remove","removeAllCookies","undefined","getQueryAttr","attrName","href","indexOf","decodeURIComponent","split","redirectIfLoggedIn","redirectToPath","data","axios","headers","authorization","tenant","loginRedirectPath","pathOrUrl","document","error","el","createElement","pathname","assign","hash","search","signup","method","username","email","password","Error","provider","url","getProviderLink","signupWithSSO","async","post","tokens","setCookiesAndTokens","redirectTo","signupWithPassword","login","emailOrUsername","token","uuid","loginWithSSO","loginWithPassword","put","loginWithLink","origin","redirect","encodeURIComponent","sendLoginLink","sendResetLink","resetPassword","logout","setMode","frameUrl","iframe","triageEvent","e","console","log","body","access","cookieOptions","id","refresh","initCallbacks","init","warn","src","style","width","height","display","appendChild","addEventListener","addIframeMessageListener","setIframe","length","forEach","cb","addInitCallback","push","isRegistered","registerUrlChangedEventListener","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","exports"],"mappings":"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"}