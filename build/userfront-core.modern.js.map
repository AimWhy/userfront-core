{"version":3,"file":"userfront-core.modern.js","sources":["../src/index.js","../src/constants.js"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n// import jwt from \"jsonwebtoken\";\n\nimport constants from \"./constants\";\nconst { apiUrl, privateIPRegex } = constants;\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nconst isTestHostname = (hn) => {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n};\n\nconst store = {\n  mode: isTestHostname() ? \"test\" : \"live\",\n};\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n  store.tenantId = tenantId;\n  store.accessTokenName = `access.${tenantId}`;\n  store.idTokenName = `id.${tenantId}`;\n  store.refreshTokenName = `refresh.${tenantId}`;\n  setTokensFromCookies();\n}\n\n/**\n * Set and then return the access token\n */\nfunction accessToken() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  return store.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nfunction idToken() {\n  store.idToken = Cookies.get(store.idTokenName);\n  return store.idToken;\n}\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nfunction getQueryAttr(attrName) {\n  if (\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\n/**\n * Define the mode of operation (live or test)\n */\nasync function setMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${store.tenantId}/mode`);\n    store.mode = data.mode || \"test\";\n  } catch (err) {\n    store.mode = \"test\";\n  }\n}\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nasync function signup({ method, username, name, email, password }) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property');\n  }\n  switch (method) {\n    case \"password\":\n      return signupWithPassword({ username, name, email, password });\n    default:\n      throw new Error('Userfront.signup called with invalid \"method\" property');\n  }\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function signupWithPassword({ username, name, email, password }) {\n  const { data } = await axios.post(`${apiUrl}auth/create`, {\n    tenantId: store.tenantId,\n    username,\n    name,\n    email,\n    password,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nasync function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property');\n  }\n  switch (method) {\n    case \"password\":\n      return loginWithPassword({ email, username, emailOrUsername, password });\n    case \"link\":\n      return loginWithLink(token, uuid);\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property');\n  }\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n}) {\n  const { data } = await axios.post(`${apiUrl}auth/basic`, {\n    tenantId: store.tenantId,\n    emailOrUsername: email || username || emailOrUsername,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n */\nasync function loginWithLink(token, uuid) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) return;\n\n  const { data } = await axios.put(`${apiUrl}auth/link`, {\n    token,\n    uuid,\n    tenantId: store.tenantId,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Problem logging in.\");\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nasync function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nasync function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\nasync function resetPassword({ uuid, token, password }) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n  const { data } = await axios.put(`${apiUrl}auth/reset`, {\n    tenantId: store.tenantId,\n    uuid,\n    token,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\n      \"There was a problem resetting your password. Please try again.\"\n    );\n  }\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nasync function redirectIfLoggedIn() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nfunction redirectToPath(pathOrUrl) {\n  if (!pathOrUrl) return;\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.href = path;\n  }\n}\n\n/**\n * Log a user out and redirect to the logout path.\n */\nasync function logout() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    redirectToPath(data.redirectTo);\n  } catch (err) {}\n}\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nfunction setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nfunction removeAllCookies() {\n  removeCookie(store.accessTokenName);\n  removeCookie(store.idTokenName);\n  removeCookie(store.refreshTokenName);\n  store.accessToken = undefined;\n  store.idToken = undefined;\n  store.refreshToken = undefined;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nfunction setTokensFromCookies() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  store.idToken = Cookies.get(store.idTokenName);\n  store.refreshToken = Cookies.get(store.refreshTokenName);\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nfunction setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  setTokensFromCookies();\n}\n\n/**\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\nexport default {\n  accessToken,\n  getQueryAttr,\n  idToken,\n  init,\n  isTestHostname,\n  login,\n  logout,\n  redirectIfLoggedIn,\n  registerUrlChangedEventListener,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  setMode,\n  setCookie,\n  signup,\n  store,\n};\n","export default {\n  apiUrl: `https://api.userfront.com/v0/`,\n  privateIPRegex: /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g,\n};\n"],"names":["apiUrl","privateIPRegex","isTestHostname","hn","hostname","window","location","match","err","store","mode","getQueryAttr","attrName","href","indexOf","decodeURIComponent","split","redirectToPath","pathOrUrl","el","document","createElement","pathname","hash","search","setCookie","value","options","type","cookieName","tenantId","secure","sameSite","Cookies","set","removeCookie","name","remove","removeAllCookies","accessTokenName","idTokenName","refreshTokenName","accessToken","undefined","idToken","refreshToken","setTokensFromCookies","get","setCookiesAndTokens","tokens","access","cookieOptions","id","refresh","isRegistered","init","console","warn","login","async","method","email","username","emailOrUsername","password","token","uuid","Error","data","axios","post","redirectTo","loginWithPassword","put","loginWithLink","logout","headers","authorization","redirectIfLoggedIn","tenant","loginRedirectPath","registerUrlChangedEventListener","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","addEventListener","error","resetPassword","sendLoginLink","sendResetLink","setMode","signup","signupWithPassword"],"mappings":"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"}