{"version":3,"file":"userfront-core.js","sources":["../src/index.js"],"sourcesContent":["const axios = require(\"axios\");\nconst Cookies = require(\"js-cookie\");\n\nconst { apiUrl, privateIPRegex } = require(\"./constants\");\n\nconst isTestHostname = (hn) => {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n};\n\nconst scope = {\n  mode: isTestHostname() ? \"test\" : \"live\",\n};\n\nfunction init(tenantId, opts = {}) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n  scope.tenantId = tenantId;\n  scope.signupModId = opts.signup;\n  scope.loginModId = opts.login;\n  scope.logoutModId = opts.logout;\n  scope.resetModId = opts.reset;\n  scope.accessTokenName = `access.${tenantId}`;\n  scope.idTokenName = `id.${tenantId}`;\n  scope.refreshTokenName = `refresh.${tenantId}`;\n}\n\nasync function getMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${scope.tenantId}/mode`);\n    scope.mode = data.mode || \"test\";\n  } catch (err) {\n    scope.mode = \"test\";\n  }\n}\n\nasync function signup({ username, name, email, password }) {\n  const { data } = await axios.post(`${apiUrl}auth/create`, {\n    tenantId: scope.tenantId,\n    username,\n    name,\n    email,\n    password,\n  });\n\n  if (data.tokens) {\n    setCookie(\n      data.tokens.access.value,\n      data.tokens.access.cookieOptions,\n      \"access\"\n    );\n    setCookie(data.tokens.id.value, data.tokens.id.cookieOptions, \"id\");\n    setCookie(\n      data.tokens.refresh.value,\n      data.tokens.refresh.cookieOptions,\n      \"refresh\"\n    );\n    window.location.href = data.redirectTo;\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\nfunction redirectTo(url) {\n  try {\n  } catch (err) {}\n}\n\nasync function logout() {\n  const token = Cookies.get(scope.accessTokenName);\n  if (!token) return;\n\n  try {\n    const { data } = await axios.get(`${apiUrl}/auth/logout`, {\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n\n    removeCookie(scope.accessTokenName);\n    removeCookie(scope.idTokenName);\n    removeCookie(scope.refreshTokenName);\n    window.location.href = data.redirectTo;\n  } catch (err) {}\n}\n\nfunction setCookie(token, options, type) {\n  const cookieName = `${type}.${scope.tenantId}`;\n  options = options || {\n    secure: scope.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, token, options);\n}\n\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\nmodule.exports = {\n  getMode,\n  init,\n  isTestHostname,\n  logout,\n  scope,\n  setCookie,\n  signup,\n};\n"],"names":["body","recover","result","e","then","axios","require","Cookies","apiUrl","privateIPRegex","isTestHostname","hn","hostname","window","location","match","err","scope","mode","setCookie","token","options","type","cookieName","tenantId","secure","sameSite","set","removeCookie","name","remove","module","exports","getMode","get","data","init","opts","console","warn","signupModId","signup","loginModId","login","logoutModId","logout","resetModId","reset","accessTokenName","idTokenName","refreshTokenName","headers","authorization","href","redirectTo","username","email","password","post","tokens","Error","access","value","cookieOptions","id","refresh"],"mappings":"AAkjBO,WAAgBA,EAAMC,GAC5B,IACC,IAAIC,EAASF,IACZ,MAAMG,GACP,OAAOF,EAAQE,GAEhB,OAAID,GAAUA,EAAOE,KACbF,EAAOE,UAAK,EAAQH,GAErBC,MA3jBFG,EAAQC,QAAQ,SAChBC,EAAUD,QAAQ,eAEWA,QAAQ,eAAnCE,IAAAA,OAAQC,IAAAA,eAEVC,EAAiB,SAACC,GACtB,IACE,IAAMC,EAAWD,GAAME,OAAOC,SAASF,SACvC,SAAUA,EAASG,MAAM,gBAAiBH,EAASG,MAAMN,IACzD,MAAOO,GACP,WAIEC,EAAQ,CACZC,KAAMR,IAAmB,OAAS,QA0EpC,SAASS,EAAUC,EAAOC,EAASC,GACjC,IAAMC,EAAgBD,MAAQL,EAAMO,SACpCH,EAAUA,GAAW,CACnBI,OAAuB,SAAfR,EAAMC,KACdQ,SAAU,OAEC,YAATJ,IACFD,EAAQK,SAAW,UAErBnB,EAAQoB,IAAIJ,EAAYH,EAAOC,GAGjC,SAASO,EAAaC,GACpBtB,EAAQuB,OAAOD,GACftB,EAAQuB,OAAOD,EAAM,CAAEJ,QAAQ,EAAMC,SAAU,QAC/CnB,EAAQuB,OAAOD,EAAM,CAAEJ,QAAQ,EAAMC,SAAU,SAC/CnB,EAAQuB,OAAOD,EAAM,CAAEJ,QAAQ,EAAOC,SAAU,QAChDnB,EAAQuB,OAAOD,EAAM,CAAEJ,QAAQ,EAAOC,SAAU,SAGlDK,OAAOC,QAAU,CACfC,iEA9EyB5B,EAAM6B,IAAO1B,aAAiBS,EAAMO,oCAC3DP,EAAMC,OADEiB,KACUjB,MAAQ,qBAE1BD,EAAMC,KAAO,2GA4EfkB,KA7FF,SAAcZ,EAAUa,GACtB,YADsBA,IAAAA,EAAO,KACxBb,EAAU,OAAOc,QAAQC,KAAK,2CACnCtB,EAAMO,SAAWA,EACjBP,EAAMuB,YAAcH,EAAKI,OACzBxB,EAAMyB,WAAaL,EAAKM,MACxB1B,EAAM2B,YAAcP,EAAKQ,OACzB5B,EAAM6B,WAAaT,EAAKU,MACxB9B,EAAM+B,0BAA4BxB,EAClCP,EAAMgC,kBAAoBzB,EAC1BP,EAAMiC,4BAA8B1B,GAqFpCd,eAAAA,EACAmC,sBAzCA,IAAMzB,EAAQb,EAAQ2B,IAAIjB,EAAM+B,iBAChC,IAAK5B,EAAO,yBAFU,0CAKGf,EAAM6B,IAAO1B,iBAAsB,CACxD2C,QAAS,CACPC,wBAAyBhC,2BAFrBe,IAAAA,KAMRP,EAAaX,EAAM+B,iBACnBpB,EAAaX,EAAMgC,aACnBrB,EAAaX,EAAMiC,kBACnBrC,OAAOC,SAASuC,KAAOlB,EAAKmB,8HA6B9BrC,MAAAA,EACAE,UAAAA,EACAsB,uBA7EsBc,IAAAA,SAAU1B,IAAAA,KAAM2B,IAAAA,MAAOC,IAAAA,oCACtBpD,EAAMqD,KAAQlD,gBAAqB,CACxDgB,SAAUP,EAAMO,SAChB+B,SAAAA,EACA1B,KAAAA,EACA2B,MAAAA,EACAC,SAAAA,0BALMtB,IAAAA,SAQJA,EAAKwB,OAcP,UAAUC,MAAM,qBAbhBzC,EACEgB,EAAKwB,OAAOE,OAAOC,MACnB3B,EAAKwB,OAAOE,OAAOE,cACnB,UAEF5C,EAAUgB,EAAKwB,OAAOK,GAAGF,MAAO3B,EAAKwB,OAAOK,GAAGD,cAAe,MAC9D5C,EACEgB,EAAKwB,OAAOM,QAAQH,MACpB3B,EAAKwB,OAAOM,QAAQF,cACpB,WAEFlD,OAAOC,SAASuC,KAAOlB,EAAKmB"}