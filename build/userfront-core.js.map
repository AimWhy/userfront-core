{"version":3,"file":"userfront-core.js","sources":["../src/constants.js","../src/utils.js","../src/store.js","../src/tokens.js","../src/cookies.js","../src/url.js","../src/refresh.js","../src/signon.js","../src/user.js","../src/index.js","../src/logout.js","../src/mode.js"],"sourcesContent":["export const apiUrl = `https://api.userfront.com/v0/`;\n\nexport const privateIPRegex =\n  /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g;\n","/**\n * This file is for zero-dependency utilities that can\n * be imported by any other file. Don't add any imports\n * to this file other than constants\n */\n\nimport { privateIPRegex } from \"./constants.js\";\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nexport function isTestHostname(hn) {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n}\n\n/**\n * Get the unverified base64 decoded payload of a JWT\n *\n * @param {String} token - JSON Web Token\n * @returns {Object}\n */\nexport function getJWTPayload(token) {\n  try {\n    const encodedPayload = token\n      .split(\".\")[1]\n      .replace(\"-\", \"+\")\n      .replace(\"_\", \"/\");\n    return JSON.parse(atob(encodedPayload));\n  } catch (error) {\n    console.error(\"Problem decoding JWT payload\", error);\n  }\n}\n\nexport function throwFormattedError(error) {\n  if (!error) return;\n  if (typeof error === \"string\") throw new Error(error);\n  if (error?.response?.data?.message) {\n    throw new Error(error.response.data.message);\n  }\n  throw error;\n}\n","import { isTestHostname } from \"./utils.js\";\n\nexport const store = {\n  user: {},\n  mode: isTestHostname() ? \"test\" : \"live\",\n};\n","import Cookies from \"js-cookie\";\n\nimport { store } from \"./store.js\";\n\n/**\n * Set and then return the access token\n */\nexport function accessToken() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  return store.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nexport function idToken() {\n  store.idToken = Cookies.get(store.idTokenName);\n  return store.idToken;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nexport function setTokensFromCookies() {\n  const tokenNames = [\"access\", \"id\", \"refresh\"];\n  tokenNames.map((tokenName) => {\n    try {\n      const token = Cookies.get(store[`${tokenName}TokenName`]);\n      store[`${tokenName}Token`] = token;\n    } catch (error) {\n      console.warn(`Problem setting ${tokenName} token.`);\n    }\n  });\n}\n\n// NOTE Commenting this out 6/11/21 because the packages it relies on (jsonwebtoken & jwks-rsa)\n// both cause a lot of bloat. If we want to verify tokens, this is a nice way to do it, but\n// we need to find libraries designed for the browser instead of node.\n/**\n * Verify the provided token\n * @param {String} token\n * @returns {Promise<void>} The provided token has been verified if `verifyToken` resolves without error\n */\n// export async function verifyToken(token) {\n//   if (!token) throw new Error(\"Missing token\");\n\n//   let publicKey;\n//   try {\n//     const decodedToken = jwt.decode(token, { complete: true });\n//     if (!decodedToken.header || !decodedToken.header.kid) {\n//       throw new Error(\"Token kid not defined\");\n//     }\n\n//     const client = new JwksClient({\n//       jwksUri: `${apiUrl}tenants/${store.tenantId}/jwks/${store.mode}`,\n//       requestHeaders: { origin: window.location.origin },\n//     });\n\n//     const key = await client.getSigningKey(decodedToken.header.kid);\n//     publicKey = key.getPublicKey();\n//   } catch (error) {\n//     throw error;\n//   }\n\n//   if (!publicKey) {\n//     throw new Error(\"Public key not found\");\n//   }\n\n//   try {\n//     jwt.verify(token, publicKey);\n//   } catch (error) {\n//     throw new Error(\"Token verification failed\");\n//   }\n\n//   return Promise.resolve();\n// }\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nexport function setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nexport function removeAllCookies() {\n  removeCookie(store.accessTokenName);\n  removeCookie(store.idTokenName);\n  removeCookie(store.refreshTokenName);\n  store.accessToken = undefined;\n  store.idToken = undefined;\n  store.refreshToken = undefined;\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nexport function setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  setTokensFromCookies();\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nexport function getQueryAttr(attrName) {\n  if (\n    typeof window !== \"object\" ||\n    typeof window.location !== \"object\" ||\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nexport async function redirectIfLoggedIn() {\n  if (!store.accessToken) {\n    return removeAllCookies();\n  }\n  if (getQueryAttr(\"redirect\")) {\n    return redirectToPath(getQueryAttr(\"redirect\"));\n  }\n\n  try {\n    const { data } = await axios.get(`${apiUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nexport function redirectToPath(pathOrUrl, { redirect } = {}) {\n  // Return if redirect=false, or if SSR or mobile\n  if (\n    redirect === false ||\n    typeof document !== \"object\" ||\n    typeof window !== \"object\"\n  ) {\n    return;\n  }\n  try {\n    document && window;\n  } catch (error) {\n    return;\n  }\n\n  // If redirect is explicitly set, use that\n  if (!!redirect) pathOrUrl = redirect;\n\n  // If no pathOrUrl, do not redirect\n  if (!pathOrUrl) return;\n\n  // Perform hard redirect\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.assign(path);\n  }\n}\n","import { store } from \"./store.js\";\nimport { getIframe, postMessageAsPromise } from \"./iframe.js\";\n\n/**\n * Refresh the access and ID tokens using the iframe's existing refresh token\n * @returns {Promise}\n */\nexport async function refresh() {\n  return;\n\n  // TODO re-enable refresh method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // return postMessageAsPromise({\n  //   type: \"refresh\",\n  //   tenantId: store.tenantId,\n  // });\n}\n\n/**\n * Use a sessionId and nonce to set the iframe refresh token\n * @param {String} sessionId\n * @param {String} nonce\n * @returns {Promise}\n */\nexport async function exchange({ sessionId, nonce }) {\n  return;\n\n  // TODO re-enable exchange method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // return postMessageAsPromise({\n  //   type: \"exchange\",\n  //   tenantId: store.tenantId,\n  //   payload: {\n  //     sessionId,\n  //     nonce,\n  //   },\n  // });\n}\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\nimport { getQueryAttr, redirectToPath } from \"./url.js\";\nimport { exchange } from \"./refresh.js\";\nimport { throwFormattedError } from \"./utils.js\";\n\n/**\n * This file has methods for signing up and logging in\n */\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} data - Object for custom user fields\n * @param {String} redirect - path to redirect to, or if false, do not redirect\n */\nexport async function signup({\n  method,\n  username,\n  name,\n  email,\n  password,\n  data,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO({ provider: method, redirect });\n    case \"password\":\n      return signupWithPassword({\n        username,\n        name,\n        email,\n        password,\n        userData: data,\n        redirect,\n      });\n    default:\n      throw new Error(\n        'Userfront.signup called with invalid \"method\" property.'\n      );\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {String} username\n * @param {String} name\n * @param {String} email\n * @param {String} password\n * @param {Object} userData - alias for the user.data object, since \"data\" is used in the response\n * @param {String} redirect - do not redirect if false, or redirect to a specific path\n */\nasync function signupWithPassword({\n  username,\n  name,\n  email,\n  password,\n  userData,\n  redirect,\n} = {}) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/create`, {\n      tenantId: store.tenantId,\n      username,\n      name,\n      email,\n      password,\n      data: userData,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\", {\n        redirect,\n      });\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    if (error?.response?.data?.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw error;\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {String} method\n * @param {String} email\n * @param {String} username\n * @param {String} emailOrUsername\n * @param {String} password\n * @param {String} token\n * @param {String} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n  redirect,\n} = {}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property.');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO({ provider: method, redirect });\n    case \"password\":\n      return loginWithPassword({\n        email,\n        username,\n        emailOrUsername,\n        password,\n        redirect,\n      });\n    case \"link\":\n      return loginWithLink({ token, uuid, redirect });\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property.');\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nfunction loginWithSSO({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink({ provider, redirect });\n  window.location.assign(url);\n}\n\nexport function getProviderLink({ provider, redirect }) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n\n  let url = `https://api.userfront.com/v0/auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}`;\n\n  let redirectTo = redirect || getQueryAttr(\"redirect\");\n  if (redirect === false) {\n    redirectTo = typeof document === \"object\" && document.location.pathname;\n  }\n  if (redirectTo) {\n    url += `&redirect=${encodeURIComponent(redirectTo)}`;\n  }\n\n  return url;\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n  redirect,\n}) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/basic`, {\n      tenantId: store.tenantId,\n      emailOrUsername: email || username || emailOrUsername,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\", {\n        redirect,\n      });\n      return data;\n    } else {\n      throw new Error(\"Please try again.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n * @param {String} redirect - do not redirect if false, or redirect to given path\n */\nexport async function loginWithLink({ token, uuid, redirect } = {}) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) return;\n\n    const { data } = await axios.put(`${apiUrl}auth/link`, {\n      token,\n      uuid,\n      tenantId: store.tenantId,\n    });\n\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      await exchange(data);\n      redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\", {\n        redirect,\n      });\n      return data;\n    } else {\n      throw new Error(\"Problem logging in.\");\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nexport async function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link.\");\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nexport async function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link.\");\n  }\n}\n\nexport async function resetPassword({ uuid, token, password, redirect }) {\n  try {\n    token = token || getQueryAttr(\"token\");\n    uuid = uuid || getQueryAttr(\"uuid\");\n    if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n    const { data } = await axios.put(`${apiUrl}auth/reset`, {\n      tenantId: store.tenantId,\n      uuid,\n      token,\n      password,\n    });\n    if (data.tokens) {\n      setCookiesAndTokens(data.tokens);\n      redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\", {\n        redirect,\n      });\n      return data;\n    } else {\n      throw new Error(\n        \"There was a problem resetting your password. Please try again.\"\n      );\n    }\n  } catch (error) {\n    throwFormattedError(error);\n  }\n}\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\nimport { refresh } from \"./refresh.js\";\nimport { store } from \"./store.js\";\nimport { getJWTPayload } from \"./utils.js\";\n\n/**\n * Define the store.user object based on the ID token\n */\nexport function setUser() {\n  if (!store.idToken) {\n    return console.warn(\"Cannot define user: missing ID token\");\n  }\n\n  store.user = store.user || {};\n  const idTokenPayload = getJWTPayload(store.idToken);\n\n  // Set basic user information properties from ID token\n  const propsToDefine = [\n    \"email\",\n    \"username\",\n    \"name\",\n    \"image\",\n    \"data\",\n    \"confirmedAt\",\n    \"createdAt\",\n    \"updatedAt\",\n    \"mode\",\n    \"userId\",\n    \"userUuid\",\n    \"tenantId\",\n    \"isConfirmed\",\n  ];\n  for (const prop of propsToDefine) {\n    if (prop === \"update\") return;\n    store.user[prop] = idTokenPayload[prop];\n  }\n}\n\n/**\n * Update the user record on Userfront\n * @param {Object} payload User properties to update e.g. { name: 'John Doe' }\n */\nexport async function update(payload) {\n  if (!payload || Object.keys(payload).length < 1) {\n    return console.warn(\"Missing user properties to update\");\n  }\n\n  // Make request to update the user\n  await axios.put(`${apiUrl}self`, payload, {\n    headers: {\n      authorization: `Bearer ${store.accessToken}`,\n    },\n  });\n\n  // Refresh the access and ID tokens\n  await refresh();\n\n  // Set the store.user object from the ID token\n  setUser();\n\n  return store.user;\n}\n\n/**\n * Export the store.user object with the update method added\n */\nexport const user = store.user;\nuser.update = update;\n","import { store } from \"./store.js\";\nimport { accessToken, idToken, setTokensFromCookies } from \"./tokens\";\nimport { redirectIfLoggedIn } from \"./url.js\";\nimport {\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n} from \"./signon.js\";\nimport { logout } from \"./logout.js\";\nimport { setMode } from \"./mode.js\";\n// import { setIframe } from \"./iframe.js\";\nimport { user, setUser } from \"./user.js\";\nimport { isTestHostname } from \"./utils.js\";\n\nlet initCallbacks = [];\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n  store.tenantId = tenantId;\n  store.accessTokenName = `access.${tenantId}`;\n  store.idTokenName = `id.${tenantId}`;\n  store.refreshTokenName = `refresh.${tenantId}`;\n  // setIframe(); // TODO re-enable when iframe is needed\n  setTokensFromCookies();\n\n  if (store.idToken) {\n    setUser();\n  }\n\n  try {\n    if (initCallbacks.length > 0) {\n      initCallbacks.forEach((cb) => {\n        if (!cb || typeof cb !== \"function\") return;\n        cb({ tenantId });\n      });\n    }\n    initCallbacks = [];\n  } catch (error) {}\n}\n\n/**\n * Add a callback function to be called upon Userfront.init()\n * @param {Function} cb\n */\nfunction addInitCallback(cb) {\n  if (!cb || typeof cb !== \"function\") return;\n  initCallbacks.push(cb);\n}\n\n/**\n\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\n/**\n * EXPORTS\n */\n\nexport default {\n  // index\n  addInitCallback,\n  init,\n  registerUrlChangedEventListener,\n\n  //logout\n  logout,\n\n  // mode\n  setMode,\n\n  // signon\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n\n  // store\n  store,\n\n  // tokens\n  accessToken,\n  idToken,\n\n  // url\n  redirectIfLoggedIn,\n\n  // user\n  user,\n\n  // utils\n  isTestHostname,\n};\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\n\nimport { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\nimport { redirectToPath } from \"./url\";\n\n/**\n * Log a user out and redirect to the logout path.\n */\nexport async function logout() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    redirectToPath(data.redirectTo);\n  } catch (err) {\n    removeAllCookies();\n  }\n\n  // TODO re-enable exchange method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // try {\n  //   const { data } = await postMessageAsPromise({\n  //     type: \"logout\",\n  //     tenantId: store.tenantId,\n  //   });\n  //   removeAllCookies();\n  //   setTokensFromCookies();\n  //   redirectToPath(data.redirectTo || \"/\");\n  // } catch (error) {\n  //   removeAllCookies();\n  //   redirectToPath(\"/\");\n  // }\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants.js\";\nimport { store } from \"./store.js\";\n\n/**\n * Define the mode of operation (live or test)\n */\nexport async function setMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${store.tenantId}/mode`);\n    store.mode = data.mode || \"test\";\n  } catch (err) {\n    store.mode = \"test\";\n  }\n}\n"],"names":["apiUrl","privateIPRegex","isTestHostname","hn","hostname","window","location","match","err","throwFormattedError","error","Error","response","_error$response","data","_error$response$data","message","store","user","mode","setTokensFromCookies","map","tokenName","token","Cookies","get","console","warn","setCookie","value","options","type","cookieName","tenantId","secure","sameSite","set","removeCookie","name","remove","removeAllCookies","accessTokenName","idTokenName","refreshTokenName","accessToken","undefined","idToken","refreshToken","setCookiesAndTokens","tokens","access","cookieOptions","id","refresh","getQueryAttr","attrName","href","indexOf","decodeURIComponent","split","redirectToPath","pathOrUrl","redirect","document","el","createElement","pathname","assign","hash","search","exchange","body","recover","result","e","then","getProviderLink","provider","url","origin","redirectTo","encodeURIComponent","setUser","idTokenPayload","encodedPayload","replace","JSON","parse","atob","getJWTPayload","propsToDefine","prop","update","payload","Object","keys","length","axios","put","headers","authorization","initCallbacks","isRegistered","addInitCallback","cb","push","init","forEach","registerUrlChangedEventListener","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","addEventListener","logout","setMode","login","method","email","username","emailOrUsername","password","uuid","loginWithSSO","post","loginWithPassword","loginWithLink","resetPassword","sendLoginLink","sendResetLink","signup","signupWithSSO","userData","signupWithPassword","redirectIfLoggedIn","tenant","loginRedirectPath"],"mappings":"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"}