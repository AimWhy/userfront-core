{"version":3,"file":"userfront-core.js","sources":["../src/constants.js","../src/utils.js","../src/store.js","../src/tokens.js","../src/cookies.js","../src/url.js","../src/iframe.js","../src/refresh.js","../src/signon.js","../src/user.js","../src/index.js","../src/logout.js","../src/mode.js"],"sourcesContent":["export const apiUrl = `https://api.userfront.com/v0/`;\n\nexport const privateIPRegex =\n  /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g;\n","/**\n * This file is for zero-dependency utilities that can\n * be imported by any other file. Don't add any imports\n * to this file other than constants\n */\n\nimport { privateIPRegex } from \"./constants.js\";\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nexport function isTestHostname(hn) {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n}\n\n/**\n * Get the unverified base64 decoded payload of a JWT\n *\n * @param {String} token - JSON Web Token\n * @returns {Object}\n */\nexport function getJWTPayload(token) {\n  try {\n    const encodedPayload = token.split(\".\")[1];\n    return JSON.parse(atob(encodedPayload));\n  } catch (error) {\n    console.error(\"Problem decoding JWT payload\", error);\n  }\n}\n","import { isTestHostname } from \"./utils.js\";\n\nexport const store = {\n  user: {},\n  mode: isTestHostname() ? \"test\" : \"live\",\n};\n","import Cookies from \"js-cookie\";\n\nimport { store } from \"./store.js\";\n\n/**\n * Set and then return the access token\n */\nexport function accessToken() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  return store.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nexport function idToken() {\n  store.idToken = Cookies.get(store.idTokenName);\n  return store.idToken;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nexport function setTokensFromCookies() {\n  const tokenNames = [\"access\", \"id\", \"refresh\"];\n  tokenNames.map((tokenName) => {\n    try {\n      const token = Cookies.get(store[`${tokenName}TokenName`]);\n      store[`${tokenName}Token`] = token;\n    } catch (error) {\n      console.warn(`Problem setting ${tokenName} token.`);\n    }\n  });\n}\n\n// NOTE Commenting this out 6/11/21 because the packages it relies on (jsonwebtoken & jwks-rsa)\n// both cause a lot of bloat. If we want to verify tokens, this is a nice way to do it, but\n// we need to find libraries designed for the browser instead of node.\n/**\n * Verify the provided token\n * @param {String} token\n * @returns {Promise<void>} The provided token has been verified if `verifyToken` resolves without error\n */\n// export async function verifyToken(token) {\n//   if (!token) throw new Error(\"Missing token\");\n\n//   let publicKey;\n//   try {\n//     const decodedToken = jwt.decode(token, { complete: true });\n//     if (!decodedToken.header || !decodedToken.header.kid) {\n//       throw new Error(\"Token kid not defined\");\n//     }\n\n//     const client = new JwksClient({\n//       jwksUri: `${apiUrl}tenants/${store.tenantId}/jwks/${store.mode}`,\n//       requestHeaders: { origin: window.location.origin },\n//     });\n\n//     const key = await client.getSigningKey(decodedToken.header.kid);\n//     publicKey = key.getPublicKey();\n//   } catch (error) {\n//     throw error;\n//   }\n\n//   if (!publicKey) {\n//     throw new Error(\"Public key not found\");\n//   }\n\n//   try {\n//     jwt.verify(token, publicKey);\n//   } catch (error) {\n//     throw new Error(\"Token verification failed\");\n//   }\n\n//   return Promise.resolve();\n// }\n","import Cookies from \"js-cookie\";\nimport { store } from \"./store.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nexport function setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nexport function removeAllCookies() {\n  removeCookie(store.accessTokenName);\n  removeCookie(store.idTokenName);\n  removeCookie(store.refreshTokenName);\n  store.accessToken = undefined;\n  store.idToken = undefined;\n  store.refreshToken = undefined;\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nexport function setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  setTokensFromCookies();\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nexport function getQueryAttr(attrName) {\n  if (\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nexport async function redirectIfLoggedIn() {\n  if (!store.accessToken) {\n    return removeAllCookies();\n  }\n  if (getQueryAttr(\"redirect\")) {\n    return redirectToPath(getQueryAttr(\"redirect\"));\n  }\n\n  try {\n    const { data } = await axios.get(`${apiUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nexport function redirectToPath(pathOrUrl) {\n  try {\n    document;\n  } catch (error) {\n    return;\n  }\n  if (!pathOrUrl) return;\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.assign(path);\n  }\n}\n","import { setCookiesAndTokens } from \"./cookies.js\";\n\nexport const iframeOrigin = \"https://auth.userfront.net\";\nconst iframeId = \"uf-auth-frame\";\n\nlet iframe;\n\n/**\n * Add the auth iframe to the document body, if the iframe\n * has not been added already.\n */\nexport function setIframe() {\n  try {\n    if (iframe) return;\n    iframe = document.createElement(\"iframe\");\n    iframe.src = iframeOrigin;\n    iframe.id = iframeId;\n    iframe.style.width = \"0px\";\n    iframe.style.height = \"0px\";\n    iframe.style.display = \"none\";\n    document.body.appendChild(iframe);\n    addIframeMessageListener();\n  } catch (error) {}\n}\n\n/**\n * Return the iframe element\n */\nexport function getIframe() {\n  return iframe;\n}\n\n/**\n * Object containing promise resolve functions associated\n * with each message sent into the iframe.\n *\n * Exported for testing purposes.\n */\nexport const resolvers = {};\n\n/**\n * Resolve the promise associated with an event\n * @param {Object} e\n */\nfunction resolve(e) {\n  try {\n    resolvers[e.data.messageId].resolve(e.data);\n  } catch (error) {}\n}\n\n/**\n * Reject the promise associated with an event\n * @param {Object} e\n */\nfunction reject(e) {\n  try {\n    resolvers[e.data.messageId].reject();\n  } catch (error) {}\n}\n\n/**\n * Post a message to the iframe and return a promise that\n * will be resolved when the iframe responds.\n * @param {Object} message\n * @returns {Promise}\n */\nexport async function postMessageAsPromise(message) {\n  // Create a random messageId\n  const messageId = `message${Math.random().toString().slice(2, 10)}`;\n\n  // Create a promise to resolve after the iframe responds\n  const promise = new Promise((resolve, reject) => {\n    resolvers[messageId] = { resolve, reject };\n  });\n\n  // Post the message with the messageId\n  message.messageId = messageId;\n  iframe.contentWindow.postMessage(message, iframeOrigin);\n\n  // Remove the promise from resolvers in 1 minute\n  setTimeout(() => {\n    delete resolvers[messageId];\n  }, 60000);\n\n  // Return the promise\n  return promise;\n}\n\n/**\n * Separated this call out from addIframeMessageListener\n * in order to make it testable.\n *\n * @param {Object} e - iframe event\n */\nexport function triageEvent(e) {\n  if (!e || e.origin !== iframeOrigin || !e.data || !e.data.type) return;\n  if (e.data.status !== 200 && e.data.type !== \"logout\") {\n    console.warn(`Problem with ${e.data.type} request.`);\n    return reject(e);\n  }\n\n  switch (e.data.type) {\n    case \"exchange\":\n      resolve(e); // No further action needed for exchange\n      return;\n    case \"refresh\":\n      setCookiesAndTokens(e.data.body.tokens);\n      resolve(e);\n      return;\n    case \"logout\":\n      resolve(e); // Logout method handles the rest\n      break;\n    default:\n      return;\n  }\n}\n\n/**\n * Add an event listener to the window that will accept messages\n * from the iframe.\n */\nfunction addIframeMessageListener() {\n  try {\n    window.addEventListener(\"message\", triageEvent);\n  } catch (error) {}\n}\n","import { store } from \"./store.js\";\nimport { getIframe, postMessageAsPromise } from \"./iframe.js\";\n\n/**\n * Refresh the access and ID tokens using the iframe's existing refresh token\n * @returns {Promise}\n */\nexport async function refresh() {\n  return;\n\n  // TODO re-enable refresh method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // return postMessageAsPromise({\n  //   type: \"refresh\",\n  //   tenantId: store.tenantId,\n  // });\n}\n\n/**\n * Use a sessionId and nonce to set the iframe refresh token\n * @param {String} sessionId\n * @param {String} nonce\n * @returns {Promise}\n */\nexport async function exchange({ sessionId, nonce }) {\n  return;\n\n  // TODO re-enable exchange method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // return postMessageAsPromise({\n  //   type: \"exchange\",\n  //   tenantId: store.tenantId,\n  //   payload: {\n  //     sessionId,\n  //     nonce,\n  //   },\n  // });\n}\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\nimport { setCookiesAndTokens } from \"./cookies.js\";\nimport { store } from \"./store.js\";\nimport { getQueryAttr, redirectToPath } from \"./url.js\";\nimport { exchange } from \"./refresh.js\";\n\n/**\n * This file has methods for signing up and logging in\n */\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nexport async function signup({ method, username, name, email, password } = {}) {\n  if (!method) {\n    return Promise.reject('Userfront.signup called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO(method);\n    case \"password\":\n      return signupWithPassword({ username, name, email, password });\n    default:\n      return Promise.reject(\n        'Userfront.signup called with invalid \"method\" property'\n      );\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function signupWithPassword({ username, name, email, password }) {\n  const { data } = await axios.post(`${apiUrl}auth/create`, {\n    tenantId: store.tenantId,\n    username,\n    name,\n    email,\n    password,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    await exchange(data);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nexport async function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n} = {}) {\n  if (!method) {\n    return Promise.reject('Userfront.login called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO(method);\n    case \"password\":\n      return loginWithPassword({ email, username, emailOrUsername, password });\n    case \"link\":\n      return loginWithLink(token, uuid);\n    default:\n      return Promise.reject(\n        'Userfront.login called with invalid \"method\" property'\n      );\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction loginWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\nexport function getProviderLink(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n\n  let url = `https://api.userfront.com/v0/auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}`;\n\n  const redirect = getQueryAttr(\"redirect\");\n  if (redirect) {\n    url += `&redirect=${encodeURIComponent(redirect)}`;\n  }\n\n  return url;\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n}) {\n  const { data } = await axios.post(`${apiUrl}auth/basic`, {\n    tenantId: store.tenantId,\n    emailOrUsername: email || username || emailOrUsername,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    await exchange(data);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n */\nasync function loginWithLink(token, uuid) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) return;\n\n  const { data } = await axios.put(`${apiUrl}auth/link`, {\n    token,\n    uuid,\n    tenantId: store.tenantId,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Problem logging in.\");\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nexport async function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nexport async function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\nexport async function resetPassword({ uuid, token, password }) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n  const { data } = await axios.put(`${apiUrl}auth/reset`, {\n    tenantId: store.tenantId,\n    uuid,\n    token,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\n      \"There was a problem resetting your password. Please try again.\"\n    );\n  }\n}\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\nimport { refresh } from \"./refresh.js\";\nimport { store } from \"./store.js\";\nimport { getJWTPayload } from \"./utils.js\";\n\n/**\n * Define the store.user object based on the ID token\n */\nexport function setUser() {\n  if (!store.idToken) {\n    return console.warn(\"Cannot define user: missing ID token\");\n  }\n\n  store.user = store.user || {};\n  const idTokenPayload = getJWTPayload(store.idToken);\n\n  // Set basic user information properties from ID token\n  const propsToDefine = [\n    \"email\",\n    \"username\",\n    \"name\",\n    \"image\",\n    \"data\",\n    \"confirmedAt\",\n    \"createdAt\",\n    \"updatedAt\",\n    \"mode\",\n    \"userId\",\n    \"userUuid\",\n    \"tenantId\",\n    \"isConfirmed\",\n  ];\n  for (const prop of propsToDefine) {\n    if (prop === \"update\") return;\n    store.user[prop] = idTokenPayload[prop];\n  }\n}\n\n/**\n * Update the user record on Userfront\n * @param {Object} payload User properties to update e.g. { name: 'John Doe' }\n */\nexport async function update(payload) {\n  if (!payload || Object.keys(payload).length < 1) {\n    return console.warn(\"Missing user properties to update\");\n  }\n\n  // Make request to update the user\n  await axios.put(`${apiUrl}self`, payload, {\n    headers: {\n      authorization: `Bearer ${store.accessToken}`,\n    },\n  });\n\n  // Refresh the access and ID tokens\n  await refresh();\n\n  // Set the store.user object from the ID token\n  setUser();\n\n  return store.user;\n}\n\n/**\n * Export the store.user object with the update method added\n */\nexport const user = store.user;\nuser.update = update;\n","import { store } from \"./store.js\";\nimport { accessToken, idToken, setTokensFromCookies } from \"./tokens\";\nimport { redirectIfLoggedIn } from \"./url.js\";\nimport {\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n} from \"./signon.js\";\nimport { logout } from \"./logout.js\";\nimport { setMode } from \"./mode.js\";\nimport { setIframe } from \"./iframe.js\";\nimport { user, setUser } from \"./user.js\";\nimport { isTestHostname } from \"./utils.js\";\n\nlet initCallbacks = [];\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n  store.tenantId = tenantId;\n  store.accessTokenName = `access.${tenantId}`;\n  store.idTokenName = `id.${tenantId}`;\n  store.refreshTokenName = `refresh.${tenantId}`;\n  setIframe();\n  setTokensFromCookies();\n\n  if (store.idToken) {\n    setUser();\n  }\n\n  try {\n    if (initCallbacks.length > 0) {\n      initCallbacks.forEach((cb) => {\n        if (!cb || typeof cb !== \"function\") return;\n        cb({ tenantId });\n      });\n    }\n    initCallbacks = [];\n  } catch (error) {}\n}\n\n/**\n * Add a callback function to be called upon Userfront.init()\n * @param {Function} cb\n */\nfunction addInitCallback(cb) {\n  if (!cb || typeof cb !== \"function\") return;\n  initCallbacks.push(cb);\n}\n\n/**\n\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\n/**\n * EXPORTS\n */\n\nexport default {\n  // index\n  addInitCallback,\n  init,\n  registerUrlChangedEventListener,\n\n  //logout\n  logout,\n\n  // mode\n  setMode,\n\n  // signon\n  login,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  signup,\n\n  // store\n  store,\n\n  // tokens\n  accessToken,\n  idToken,\n\n  // url\n  redirectIfLoggedIn,\n\n  // user\n  user,\n\n  // utils\n  isTestHostname,\n};\n","import axios from \"axios\";\nimport { apiUrl } from \"./constants.js\";\n\nimport { getIframe, postMessageAsPromise } from \"./iframe.js\";\nimport { store } from \"./store.js\";\nimport { removeAllCookies } from \"./cookies.js\";\nimport { setTokensFromCookies } from \"./tokens.js\";\nimport { redirectToPath } from \"./url\";\n\n/**\n * Log a user out and redirect to the logout path.\n */\nexport async function logout() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    redirectToPath(data.redirectTo);\n  } catch (err) {\n    removeAllCookies();\n  }\n\n  // TODO re-enable exchange method once new endpoints are stable [06/15/21]\n  // --------------------------\n  // const iframe = getIframe();\n  // if (!iframe) return;\n  // try {\n  //   const { data } = await postMessageAsPromise({\n  //     type: \"logout\",\n  //     tenantId: store.tenantId,\n  //   });\n  //   removeAllCookies();\n  //   setTokensFromCookies();\n  //   redirectToPath(data.redirectTo || \"/\");\n  // } catch (error) {\n  //   removeAllCookies();\n  //   redirectToPath(\"/\");\n  // }\n}\n","import axios from \"axios\";\n\nimport { apiUrl } from \"./constants.js\";\nimport { store } from \"./store.js\";\n\n/**\n * Define the mode of operation (live or test)\n */\nexport async function setMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${store.tenantId}/mode`);\n    store.mode = data.mode || \"test\";\n  } catch (err) {\n    store.mode = \"test\";\n  }\n}\n"],"names":["apiUrl","privateIPRegex","isTestHostname","hn","hostname","window","location","match","err","store","user","mode","setTokensFromCookies","map","tokenName","token","Cookies","get","error","console","warn","setCookie","value","options","type","cookieName","tenantId","secure","sameSite","set","removeCookie","name","remove","removeAllCookies","accessTokenName","idTokenName","refreshTokenName","accessToken","undefined","idToken","refreshToken","setCookiesAndTokens","tokens","access","cookieOptions","id","refresh","getQueryAttr","attrName","href","indexOf","decodeURIComponent","split","redirectToPath","pathOrUrl","document","el","createElement","pathname","assign","hash","search","iframe","resolvers","resolve","e","data","messageId","triageEvent","origin","status","reject","body","exchange","recover","result","then","getProviderLink","provider","Error","url","redirect","encodeURIComponent","setUser","idTokenPayload","encodedPayload","JSON","parse","atob","getJWTPayload","propsToDefine","prop","update","payload","Object","keys","length","axios","put","headers","authorization","initCallbacks","isRegistered","addInitCallback","cb","push","init","src","style","width","height","display","appendChild","addEventListener","addIframeMessageListener","setIframe","forEach","registerUrlChangedEventListener","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","logout","redirectTo","setMode","login","method","email","username","emailOrUsername","password","uuid","Promise","loginWithSSO","post","loginWithPassword","loginWithLink","resetPassword","sendLoginLink","sendResetLink","signup","signupWithSSO","signupWithPassword","redirectIfLoggedIn","tenant","loginRedirectPath"],"mappings":"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"}