import e from"axios";import t from"js-cookie";const{apiUrl:o,privateIPRegex:a}={apiUrl:"https://api.userfront.com/v0/",privateIPRegex:/((^127\.)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.))\d{1,3}\.\d{1,3}/g},s=e=>{try{const t=e||window.location.hostname;return!(!t.match(/localhost/g)&&!t.match(a))}catch(e){return!0}},n={mode:s()?"test":"live"};function r(e,o,a){const s=`${a}.${n.tenantId}`;o=o||{secure:"live"===n.mode,sameSite:"Lax"},"refresh"===a&&(o.sameSite="Strict"),t.set(s,e,o)}function i(e){t.remove(e),t.remove(e,{secure:!0,sameSite:"Lax"}),t.remove(e,{secure:!0,sameSite:"None"}),t.remove(e,{secure:!1,sameSite:"Lax"}),t.remove(e,{secure:!1,sameSite:"None"})}var c={setMode:async function(){try{const{data:t}=await e.get(`${o}tenants/${n.tenantId}/mode`);n.mode=t.mode||"test"}catch(e){n.mode="test"}},init:function(e,t={}){if(!e)return console.warn("Userfront initialized without tenant ID");n.tenantId=e,n.accessTokenName="access."+e,n.idTokenName="id."+e,n.refreshTokenName="refresh."+e},isTestHostname:s,logout:async function(){const a=t.get(n.accessTokenName);if(a)try{const{data:t}=await e.get(o+"auth/logout",{headers:{authorization:"Bearer "+a}});i(n.accessTokenName),i(n.idTokenName),i(n.refreshTokenName),window.location.href=t.redirectTo}catch(e){}},setCookie:r,signup:async function({username:t,name:a,email:s,password:i}){const{data:c}=await e.post(o+"auth/create",{tenantId:n.tenantId,username:t,name:a,email:s,password:i});if(!c.tokens)throw new Error("Please try again.");r(c.tokens.access.value,c.tokens.access.cookieOptions,"access"),r(c.tokens.id.value,c.tokens.id.cookieOptions,"id"),r(c.tokens.refresh.value,c.tokens.refresh.cookieOptions,"refresh"),window.location.href=c.redirectTo},store:n};export default c;
//# sourceMappingURL=userfront-core.modern.js.map
