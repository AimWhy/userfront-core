const e=require("axios"),t=require("js-cookie"),{apiUrl:o,privateIPRegex:n}=require("./constants"),s=e=>{try{const t=e||window.location.hostname;return!(!t.match(/localhost/g)&&!t.match(n))}catch(e){return!0}},a={mode:s()?"test":"live"};function r(e,o,n){const s=`${n}.${a.tenantId}`;o=o||{secure:"live"===a.mode,sameSite:"Lax"},"refresh"===n&&(o.sameSite="Strict"),t.set(s,e,o)}function i(e){t.remove(e),t.remove(e,{secure:!0,sameSite:"Lax"}),t.remove(e,{secure:!0,sameSite:"None"}),t.remove(e,{secure:!1,sameSite:"Lax"}),t.remove(e,{secure:!1,sameSite:"None"})}module.exports={getMode:async function(){try{const{data:t}=await e.get(`${o}tenants/${a.tenantId}/mode`);a.mode=t.mode||"test"}catch(e){a.mode="test"}},init:function(e,t={}){if(!e)return console.warn("Userfront initialized without tenant ID");a.tenantId=e,a.signupModId=t.signup,a.loginModId=t.login,a.logoutModId=t.logout,a.resetModId=t.reset,a.accessTokenName="access."+e,a.idTokenName="id."+e,a.refreshTokenName="refresh."+e},isTestHostname:s,logout:async function(){const n=t.get(a.accessTokenName);if(n)try{const{data:t}=await e.get(o+"/auth/logout",{headers:{authorization:"Bearer "+n}});i(a.accessTokenName),i(a.idTokenName),i(a.refreshTokenName),window.location.href=t.redirectTo}catch(e){}},scope:a,setCookie:r,signup:async function({username:t,name:n,email:s,password:i}){const{data:c}=await e.post(o+"auth/create",{tenantId:a.tenantId,username:t,name:n,email:s,password:i});if(!c.tokens)throw new Error("Please try again.");r(c.tokens.access.value,c.tokens.access.cookieOptions,"access"),r(c.tokens.id.value,c.tokens.id.cookieOptions,"id"),r(c.tokens.refresh.value,c.tokens.refresh.cookieOptions,"refresh"),window.location.href=c.redirectTo}};
//# sourceMappingURL=userfront-core.modern.js.map
