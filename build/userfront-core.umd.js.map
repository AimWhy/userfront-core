{"version":3,"file":"userfront-core.umd.js","sources":["../src/constants.js","../src/index.js"],"sourcesContent":["export default {\n  apiUrl: `https://api.userfront.com/v0/`,\n  privateIPRegex: /((^127\\.)|(^10\\.)|(^172\\.1[6-9]\\.)|(^172\\.2[0-9]\\.)|(^172\\.3[0-1]\\.)|(^192\\.168\\.))\\d{1,3}\\.\\d{1,3}/g,\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n// import jwt from \"jsonwebtoken\";\n\nimport constants from \"./constants\";\nconst { apiUrl, privateIPRegex } = constants;\n\n/**\n * Determine whether a hostname is in test mode.\n * @param {String} hn\n */\nconst isTestHostname = (hn) => {\n  try {\n    const hostname = hn || window.location.hostname;\n    return !!(hostname.match(/localhost/g) || hostname.match(privateIPRegex));\n  } catch (err) {\n    return true;\n  }\n};\n\nconst store = {\n  mode: isTestHostname() ? \"test\" : \"live\",\n};\n\n/**\n * Initialize the Userfront library.\n * @param {String} tenantId\n */\nfunction init(tenantId) {\n  if (!tenantId) return console.warn(\"Userfront initialized without tenant ID\");\n  store.tenantId = tenantId;\n  store.accessTokenName = `access.${tenantId}`;\n  store.idTokenName = `id.${tenantId}`;\n  store.refreshTokenName = `refresh.${tenantId}`;\n  setTokensFromCookies();\n}\n\n/**\n * Set and then return the access token\n */\nfunction accessToken() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  return store.accessToken;\n}\n\n/**\n * Set and then return the ID token\n */\nfunction idToken() {\n  store.idToken = Cookies.get(store.idTokenName);\n  return store.idToken;\n}\n\n/**\n * Get the value of a query attribute, e.g. ?attr=value\n * @param {String} attrName\n */\nfunction getQueryAttr(attrName) {\n  if (\n    !window.location.href ||\n    window.location.href.indexOf(`${attrName}=`) < 0\n  ) {\n    return;\n  }\n  return decodeURIComponent(\n    window.location.href.split(`${attrName}=`)[1].split(\"&\")[0]\n  );\n}\n\nfunction getProviderLink(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  if (!store.tenantId) throw new Error(\"Missing tenant ID\");\n  return `https://api.userfront.com/v0/auth/${provider}/login?tenant_id=${store.tenantId}&origin=${window.location.origin}&pathname=${window.location.pathname}`;\n}\n\n/**\n * Define the mode of operation (live or test)\n */\nasync function setMode() {\n  try {\n    const { data } = await axios.get(`${apiUrl}tenants/${store.tenantId}/mode`);\n    store.mode = data.mode || \"test\";\n  } catch (err) {\n    store.mode = \"test\";\n  }\n}\n\n/**\n * Register a user via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nasync function signup({ method, username, name, email, password }) {\n  if (!method) {\n    throw new Error('Userfront.signup called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return signupWithSSO(method);\n    case \"password\":\n      return signupWithPassword({ username, name, email, password });\n    default:\n      throw new Error('Userfront.signup called with invalid \"method\" property');\n  }\n}\n\n/**\n * Register a new user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction signupWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\n/**\n * Register a new user with username, name, email, and password.\n * Redirect the browser after successful signup based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function signupWithPassword({ username, name, email, password }) {\n  const { data } = await axios.post(`${apiUrl}auth/create`, {\n    tenantId: store.tenantId,\n    username,\n    name,\n    email,\n    password,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in via the provided method. This method serves to call other\n * methods, depending on the \"method\" parameter passed in.\n * @param {Object} options\n */\nasync function login({\n  method,\n  email,\n  username,\n  emailOrUsername,\n  password,\n  token,\n  uuid,\n}) {\n  if (!method) {\n    throw new Error('Userfront.login called without \"method\" property');\n  }\n  switch (method) {\n    case \"azure\":\n    case \"facebook\":\n    case \"github\":\n    case \"google\":\n    case \"linkedin\":\n      return loginWithSSO(method);\n    case \"password\":\n      return loginWithPassword({ email, username, emailOrUsername, password });\n    case \"link\":\n      return loginWithLink(token, uuid);\n    default:\n      throw new Error('Userfront.login called with invalid \"method\" property');\n  }\n}\n\n/**\n * Log a user in via SSO provider.\n * Redirect the browser after successful authentication and 302 redirect from server.\n * @param {String} provider Name of SSO provider\n */\nfunction loginWithSSO(provider) {\n  if (!provider) throw new Error(\"Missing provider\");\n  const url = getProviderLink(provider);\n  window.location.assign(url);\n}\n\n/**\n * Log a user in with email/username and password.\n * Redirect the browser after successful login based on the redirectTo value returned.\n * @param {Object} options\n */\nasync function loginWithPassword({\n  email,\n  username,\n  emailOrUsername,\n  password,\n}) {\n  const { data } = await axios.post(`${apiUrl}auth/basic`, {\n    tenantId: store.tenantId,\n    emailOrUsername: email || username || emailOrUsername,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Please try again.\");\n  }\n}\n\n/**\n * Log a user in with a token/uuid combo passed into the function or\n * in the URL querystring. ?token=...&uuid=...\n * @param {String} token\n * @param {UUID} uuid\n */\nasync function loginWithLink(token, uuid) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) return;\n\n  const { data } = await axios.put(`${apiUrl}auth/link`, {\n    token,\n    uuid,\n    tenantId: store.tenantId,\n  });\n\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\"Problem logging in.\");\n  }\n}\n\n/**\n * Send a login link to the provided email.\n * @param {String} email\n */\nasync function sendLoginLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\n/**\n * Send a password reset link to the provided email.\n * @param {String} email\n */\nasync function sendResetLink(email) {\n  try {\n    const { data } = await axios.post(`${apiUrl}auth/reset/link`, {\n      email,\n      tenantId: store.tenantId,\n    });\n    return data;\n  } catch (err) {\n    throw new Error(\"Problem sending link\");\n  }\n}\n\nasync function resetPassword({ uuid, token, password }) {\n  if (!token) token = getQueryAttr(\"token\");\n  if (!uuid) uuid = getQueryAttr(\"uuid\");\n  if (!token || !uuid) throw new Error(\"Missing token or uuid\");\n  const { data } = await axios.put(`${apiUrl}auth/reset`, {\n    tenantId: store.tenantId,\n    uuid,\n    token,\n    password,\n  });\n  if (data.tokens) {\n    setCookiesAndTokens(data.tokens);\n    redirectToPath(getQueryAttr(\"redirect\") || data.redirectTo || \"/\");\n  } else {\n    throw new Error(\n      \"There was a problem resetting your password. Please try again.\"\n    );\n  }\n}\n\n// TODO replace with direct check of the access token.\n/**\n * If the access token is valid, redirect the browser to the\n * tenant's login redirection path (path after login).\n */\nasync function redirectIfLoggedIn() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}self`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    if (data.tenant && data.tenant.loginRedirectPath) {\n      redirectToPath(data.tenant.loginRedirectPath);\n    }\n  } catch (err) {\n    removeAllCookies();\n  }\n}\n\n/**\n * Redirect to path portion of a URL.\n */\nfunction redirectToPath(pathOrUrl) {\n  if (!pathOrUrl) return;\n  const el = document.createElement(\"a\");\n  el.href = pathOrUrl;\n  let path = `${el.pathname}${el.hash}${el.search}`;\n  if (el.pathname !== window.location.pathname) {\n    window.location.href = path;\n  }\n}\n\n/**\n * Log a user out and redirect to the logout path.\n */\nasync function logout() {\n  if (!store.accessToken) return removeAllCookies();\n  try {\n    const { data } = await axios.get(`${apiUrl}auth/logout`, {\n      headers: {\n        authorization: `Bearer ${store.accessToken}`,\n      },\n    });\n    removeAllCookies();\n    redirectToPath(data.redirectTo);\n  } catch (err) {}\n}\n\n/**\n * Set a cookie value based on the given options.\n * @param {String} value\n * @param {Object} options\n * @param {String} type\n */\nfunction setCookie(value, options, type) {\n  const cookieName = `${type}.${store.tenantId}`;\n  options = options || {\n    secure: store.mode === \"live\",\n    sameSite: \"Lax\",\n  };\n  if (type === \"refresh\") {\n    options.sameSite = \"Strict\";\n  }\n  Cookies.set(cookieName, value, options);\n}\n\n/**\n * Remove a cookie by name, regardless of its cookie setting(s).\n * @param {String} name\n */\nfunction removeCookie(name) {\n  Cookies.remove(name);\n  Cookies.remove(name, { secure: true, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: true, sameSite: \"None\" });\n  Cookies.remove(name, { secure: false, sameSite: \"Lax\" });\n  Cookies.remove(name, { secure: false, sameSite: \"None\" });\n}\n\n/**\n * Remove all auth cookies (access, id, refresh).\n */\nfunction removeAllCookies() {\n  removeCookie(store.accessTokenName);\n  removeCookie(store.idTokenName);\n  removeCookie(store.refreshTokenName);\n  store.accessToken = undefined;\n  store.idToken = undefined;\n  store.refreshToken = undefined;\n}\n\n/**\n * Define the store token values from the cookie values.\n */\nfunction setTokensFromCookies() {\n  store.accessToken = Cookies.get(store.accessTokenName);\n  store.idToken = Cookies.get(store.idTokenName);\n  store.refreshToken = Cookies.get(store.refreshTokenName);\n}\n\n/**\n * Set the cookies from a tokens object, and add to the local store.\n * @param {Object} tokens\n */\nfunction setCookiesAndTokens(tokens) {\n  setCookie(tokens.access.value, tokens.access.cookieOptions, \"access\");\n  setCookie(tokens.id.value, tokens.id.cookieOptions, \"id\");\n  setCookie(tokens.refresh.value, tokens.refresh.cookieOptions, \"refresh\");\n  setTokensFromCookies();\n}\n\n/**\n * Register a window-level event called \"urlchanged\" that will fire\n * whenever the browser URL changes.\n */\nlet isRegistered = false;\nfunction registerUrlChangedEventListener() {\n  if (isRegistered) return;\n  isRegistered = true;\n  try {\n    history.pushState = ((f) =>\n      function pushState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"pushstate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.pushState);\n\n    history.replaceState = ((f) =>\n      function replaceState() {\n        var ret = f.apply(this, arguments);\n        window.dispatchEvent(new Event(\"replacestate\"));\n        window.dispatchEvent(new Event(\"urlchanged\"));\n        return ret;\n      })(history.replaceState);\n\n    window.addEventListener(\"popstate\", () => {\n      window.dispatchEvent(new Event(\"urlchanged\"));\n    });\n  } catch (error) {}\n}\n\nexport default {\n  accessToken,\n  getQueryAttr,\n  idToken,\n  init,\n  isTestHostname,\n  login,\n  logout,\n  redirectIfLoggedIn,\n  registerUrlChangedEventListener,\n  resetPassword,\n  sendLoginLink,\n  sendResetLink,\n  setMode,\n  setCookie,\n  signup,\n  store,\n};\n"],"names":["apiUrl","privateIPRegex","_catch","body","recover","result","e","then","logout","_get__","accessToken","get","headers","authorization","data","redirectTo","redirectIfLoggedIn","tenant","loginRedirectPath","resetPassword","uuid","token","password","Error","put","tenantId","tokens","sendResetLink","email","post","sendLoginLink","loginWithLink","loginWithPassword","username","emailOrUsername","login","method","signupWithPassword","name","signup","setMode","mode","isTestHostname","hn","hostname","window","location","match","err","store","init","console","warn","accessTokenName","idTokenName","refreshTokenName","idToken","getQueryAttr","attrName","href","indexOf","decodeURIComponent","split","getProviderLink","provider","origin","pathname","signupWithSSO","url","assign","loginWithSSO","redirectToPath","pathOrUrl","el","document","createElement","hash","search","setCookie","value","options","type","cookieName","secure","sameSite","set","removeCookie","remove","removeAllCookies","undefined","refreshToken","setTokensFromCookies","setCookiesAndTokens","access","cookieOptions","id","refresh","isRegistered","registerUrlChangedEventListener","_assign__","history","pushState","f","ret","apply","this","arguments","dispatchEvent","Event","replaceState","addEventListener","error"],"mappings":"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"}